package gui;

import autobazar.Autobazar;
import autobazar.Inzerat;
import java.awt.Color;
import java.awt.HeadlessException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import sql.UpdateDB;

/**
 * Dialogove okno pre synchronizáciu dát načítaných zo súboru s databázou.
 * @author Jakub Cachovan
 */
public class SynchronizeDbJDialog extends javax.swing.JDialog {
    
    private String dbPath;
    private Autobazar autobazar;
    private SwingWorker<Void, String> worker;
    private double progress;
    /**
     * Creates new form SynchronizeDbJDialog
     */
    public SynchronizeDbJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //jButtonSpusti.setEnabled(true);
        jButtonZrusit.setEnabled(false);
        jProgressBar1.setBackground(Color.green);
        jButtonVybrat.setIcon(new ImageIcon("./icons/more.png"));
        jButtonSpusti.setIcon(new ImageIcon("./icons/obnovit.png"));
        jButtonZrusit.setIcon(new ImageIcon("./icons/vymazat.png"));
    }

    /**
     * Getter pre objekt typu Autobazar.
     * @return 
     */
    public Autobazar getAutobazar() {
        return autobazar;
    }

    /**
     * Setter pre objekt typu Autobazar.
     * @param autobazar 
     */
    public void setAutobazar(Autobazar autobazar) {
        this.autobazar = autobazar;
    }

    /**
     * Getter pre cestu k databáze.
     * @return 
     */
    public String getDbPath() {
        return dbPath;
    }

    /**
     * Setter pre cestu k databáze.
     * @param dbPath 
     */
    public void setDbPath(String dbPath) {
        this.dbPath = dbPath;
    }

    /**
     * Getter pre 
     * @return 
     */
    public double getProgress() {
        return progress;
    }

    /**
     * 
     * @param progress 
     */
    public void setProgress(double progress) {
        this.progress = progress;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jButtonSpusti = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMessages = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButtonVybrat = new javax.swing.JButton();
        jButtonZrusit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Synchronizácia s databázou");

        jButtonSpusti.setIcon(new javax.swing.ImageIcon("C:\\Users\\Acer\\Documents\\NetBeansProjects\\Autobazar\\icons\\obnovit.png")); // NOI18N
        jButtonSpusti.setText("Synchronizovať");
        jButtonSpusti.setEnabled(false);
        jButtonSpusti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSpustiActionPerformed(evt);
            }
        });

        jTextAreaMessages.setColumns(20);
        jTextAreaMessages.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jTextAreaMessages.setRows(5);
        jTextAreaMessages.setFocusable(false);
        jScrollPane1.setViewportView(jTextAreaMessages);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel1.setText("Databáza:");

        jTextField1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jTextField1.setEnabled(false);

        jButtonVybrat.setIcon(new javax.swing.ImageIcon("C:\\Users\\Acer\\Documents\\NetBeansProjects\\Autobazar\\icons\\more.png")); // NOI18N
        jButtonVybrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVybratActionPerformed(evt);
            }
        });

        jButtonZrusit.setIcon(new javax.swing.ImageIcon("C:\\Users\\Acer\\Documents\\NetBeansProjects\\Autobazar\\icons\\vymazat.png")); // NOI18N
        jButtonZrusit.setText("Zrušiť");
        jButtonZrusit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZrusitActionPerformed(evt);
            }
        });

        jButton1.setText("Zatvoriť");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonVybrat))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSpusti, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonZrusit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVybrat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonZrusit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSpusti, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Vybranie databázy na synchronizáciu.
     * @param evt 
     */
    private void jButtonVybratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVybratActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser("./");
            fileChooser.setSelectedFile(new File("autobazar.sqlite"));
            if (fileChooser.showSaveDialog(this)== JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                if(file.exists() && !file.isDirectory()) { 
                    dbPath = file.getAbsolutePath();
                    jTextField1.setText(dbPath);
                    jButtonSpusti.setEnabled(true);
                }else{
                    JOptionPane.showMessageDialog(null, "Načítavanie databázy zlyhalo! Skúste vybrať iný súbor...", "Chyba", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButtonVybratActionPerformed

    /**
     * Vykonanie synchronizácie s načítanou databázou.
     * @param evt 
     */
    private void jButtonSpustiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSpustiActionPerformed
        worker = new SwingWorker<Void, String>() {
            @Override
            protected Void doInBackground() throws Exception {
                jButtonVybrat.setEnabled(false);
                jButtonSpusti.setEnabled(false);
                jButtonZrusit.setEnabled(true);
                publish("Synchronizácia s databázou -> " + dbPath);
                int pocetInzeratov = autobazar.getZoznamInzeratov().size();
                for (int i = 0; i < pocetInzeratov; i++) {                   
                    Inzerat inzerat = autobazar.getZoznamInzeratov().get(i);
                    if(isCancelled()){
                        return null;
                    }
                    publish("Úprava inzerátu s ID: " + inzerat.getID());
                    if(UpdateDB.upravitInzerat(inzerat, dbPath)){
                        publish(" >> Inzerát s ID:" + inzerat.getID() + " bol upravený !");
                    }else{
                        publish(" >> CHYBA!!! Inzerat s ID = " + inzerat.getID() + " sa nepodarilo upraviť !");
                        worker.cancel(true);
                    }
                    int progress = Math.round(((float)i / (float)pocetInzeratov) * 100f);
                    System.out.println(progress);
                    setProgress(progress);                   
                    //Thread.sleep(10);
                }
                return null;
            }

            @Override
            protected void process(List<String> list) {
                for (String line : list) {
                    jTextAreaMessages.append(line);
                    jTextAreaMessages.append("\n");
                }
            }
            
            @Override
            protected void done() {
                jButtonVybrat.setEnabled(true);
                jButtonSpusti.setEnabled(true);
                jButtonZrusit.setEnabled(false);
                if(isCancelled()){
                    jTextAreaMessages.append("--------------------------------------\n");
                    jTextAreaMessages.append("Zrušené\n");
                }else{
                    jTextAreaMessages.append("--------------------------------------\n");
                    jTextAreaMessages.append("Dokončené\n");
                    setProgress(100);
                }      
            }  
        };
        
        worker.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent event) {
                //System.out.println(event);
                switch (event.getPropertyName()){
                    case "progress":
                        jProgressBar1.setValue((Integer)event.getNewValue());
                }
            }
        });
        
        worker.execute();
    }//GEN-LAST:event_jButtonSpustiActionPerformed

    /**
     * Zrušenie vykonávania synchronizácie.
     * @param evt 
     */
    private void jButtonZrusitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZrusitActionPerformed
        worker.cancel(true);
    }//GEN-LAST:event_jButtonZrusitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSpusti;
    private javax.swing.JButton jButtonVybrat;
    private javax.swing.JButton jButtonZrusit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMessages;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
